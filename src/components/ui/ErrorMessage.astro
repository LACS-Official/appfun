---
interface Props {
  title?: string;
  message: string;
  type?: 'error' | 'warning' | 'info';
  showIcon?: boolean;
  showRetry?: boolean;
  retryText?: string;
  onRetry?: string;
  class?: string;
}

const {
  title,
  message,
  type = 'error',
  showIcon = true,
  showRetry = false,
  retryText = '重试',
  onRetry,
  class: className = ''
} = Astro.props;

const typeClasses = {
  error: {
    container: 'bg-red-50 border-red-200 text-red-800',
    icon: 'text-red-400',
    button: 'bg-red-600 hover:bg-red-700 text-white'
  },
  warning: {
    container: 'bg-yellow-50 border-yellow-200 text-yellow-800',
    icon: 'text-yellow-400',
    button: 'bg-yellow-600 hover:bg-yellow-700 text-white'
  },
  info: {
    container: 'bg-blue-50 border-blue-200 text-blue-800',
    icon: 'text-blue-400',
    button: 'bg-blue-600 hover:bg-blue-700 text-white'
  }
};

const currentType = typeClasses[type];
---

<div class={`rounded-md border p-4 ${currentType.container} ${className}`}>
  <div class="flex">
    {showIcon && (
      <div class="flex-shrink-0">
        {type === 'error' && (
          <svg class={`h-5 w-5 ${currentType.icon}`} fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
          </svg>
        )}
        {type === 'warning' && (
          <svg class={`h-5 w-5 ${currentType.icon}`} fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
          </svg>
        )}
        {type === 'info' && (
          <svg class={`h-5 w-5 ${currentType.icon}`} fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
          </svg>
        )}
      </div>
    )}
    
    <div class={showIcon ? 'ml-3' : ''}>
      {title && (
        <h3 class="text-sm font-medium mb-1">
          {title}
        </h3>
      )}
      
      <div class="text-sm">
        <p>{message}</p>
      </div>
      
      {showRetry && onRetry && (
        <div class="mt-3">
          <button
            type="button"
            class={`inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md ${currentType.button} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600 transition-colors`}
            onclick={onRetry}
          >
            {retryText}
          </button>
        </div>
      )}
    </div>
  </div>
</div>
