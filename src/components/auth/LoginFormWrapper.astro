---
// 这个组件用于包装 React 登录表单
---

<div id="login-form-container">
  <!-- 登录表单将在这里渲染 -->
</div>

<!-- Supabase 未配置提示 -->
<div id="config-warning" class="hidden bg-yellow-50 border border-yellow-200 rounded-lg p-6">
  <div class="flex items-start space-x-3">
    <svg class="w-6 h-6 text-yellow-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
    </svg>
    <div>
      <h3 class="text-lg font-medium text-yellow-800 mb-2">认证系统未配置</h3>
      <p class="text-yellow-700 mb-4">
        Supabase 认证服务尚未配置。请先配置 Supabase 项目以启用登录功能。
      </p>
      <a href="/auth/setup" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-yellow-800 bg-yellow-100 hover:bg-yellow-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
        配置认证系统
      </a>
    </div>
  </div>
</div>

<script>
  // 使用纯 JavaScript 创建登录表单
  document.addEventListener('DOMContentLoaded', () => {
    // 检查用户是否已登录，如果已登录则直接跳转到主页
    if (typeof window !== 'undefined' && window.authUtils && typeof window.authUtils.isLoggedIn === 'function') {
      if (window.authUtils.isLoggedIn()) {
        console.log('用户已登录，重定向到主页');
        window.location.href = '/';
        return;
      }
    }

    // 检查认证系统是否可用
    setTimeout(() => {
      const container = document.getElementById('login-form-container');
      const warning = document.getElementById('config-warning');

      // 再次检查登录状态（防止状态恢复延迟）
      if (typeof window !== 'undefined' && window.authUtils && typeof window.authUtils.isLoggedIn === 'function') {
        if (window.authUtils.isLoggedIn()) {
          console.log('用户已登录（延迟检查），重定向到主页');
          window.location.href = '/';
          return;
        }
      }

      if (typeof window !== 'undefined' && window.authManager) {
        const authState = window.authManager.getAuthState();

        if (authState.error && authState.error.includes('Supabase 未配置')) {
          // 显示配置警告
          if (container) container.style.display = 'none';
          if (warning) warning.classList.remove('hidden');
          return;
        }
      }
      
      // 创建登录表单 HTML
      if (container) {
        container.innerHTML = `
          <div class="bg-white rounded-lg shadow-md p-8">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-gray-900">登录</h2>
              <p class="text-gray-600 mt-2">请输入您的邮箱以登录您的账号</p>
            </div>
            
            <form id="login-form" class="space-y-6">
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700">邮箱</label>
                <input
                  id="email"
                  type="email"
                  required
                  class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  placeholder="请输入邮箱地址"
                />
              </div>
              
              <div>
                <div class="flex items-center justify-between">
                  <label for="password" class="block text-sm font-medium text-gray-700">密码</label>
                  <a href="/auth/forgot-password" class="text-sm text-blue-600 hover:text-blue-800">
                    忘记密码？
                  </a>
                </div>
                <input
                  id="password"
                  type="password"
                  required
                  class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  placeholder="请输入密码"
                />
              </div>
              
              <div id="error-message" class="hidden text-sm text-red-600 bg-red-50 p-3 rounded-md"></div>
              
              <button
                type="submit"
                id="login-button"
                class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                登录
              </button>
            </form>
            
            <div class="mt-6 text-center text-sm">
              还没有账号？
              <a href="/auth/sign-up" class="text-blue-600 hover:text-blue-800">
                注册
              </a>
            </div>
          </div>
        `;
        
        // 绑定表单提交事件
        const form = document.getElementById('login-form') as HTMLFormElement | null;
        const emailInput = document.getElementById('email') as HTMLInputElement | null;
        const passwordInput = document.getElementById('password') as HTMLInputElement | null;
        const errorMessage = document.getElementById('error-message');
        const loginButton = document.getElementById('login-button') as HTMLButtonElement | null;
        
        if (form && emailInput && passwordInput && errorMessage && loginButton) {
          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = emailInput.value;
            const password = passwordInput.value;
            
            if (!email || !password) {
              showError(errorMessage, '请填写所有字段');
              return;
            }
            
            // 显示加载状态
            loginButton.disabled = true;
            loginButton.textContent = '登录中...';
            hideError(errorMessage);
            
            try {
              // 检查 authManager 是否存在 signIn 方法
              if (typeof window !== 'undefined' && window.authManager && typeof window.authManager.signIn === 'function') {
                const result = await window.authManager.signIn(email, password);
                
                if (result.success) {
                  // 登录成功
                  console.log('登录成功');
                  
                  // 触发全局认证状态更新事件
                  window.dispatchEvent(new CustomEvent('authStateChanged', {
                    detail: { isLoggedIn: true }
                  }));
                  
                  // 显示成功消息
                  if (window.authStatusIndicator) {
                    window.authStatusIndicator.showCustomMessage('登录成功！正在跳转...', 'success');
                  }
                  
                  // 延迟跳转到主页，让用户看到成功提示
                  setTimeout(() => {
                    window.location.href = '/';
                  }, 1000);
                } else {
                  showError(errorMessage, result.error || '登录失败，请重试');
                }
              } else {
                showError(errorMessage, '认证系统不可用，请刷新页面重试');
              }
            } catch (error) {
              console.error('登录错误:', error);
              showError(errorMessage, '登录失败，请重试');
            } finally {
              // 恢复按钮状态
              loginButton.disabled = false;
              loginButton.textContent = '登录';
            }
          });
        }
        
        function showError(element: HTMLElement | null, message: string) {
          if (element) {
            element.textContent = message;
            element.classList.remove('hidden');
          }
        }
        
        function hideError(element: HTMLElement | null) {
          if (element) {
            element.classList.add('hidden');
          }
        }
      }
    }, 500); // 等待认证管理器加载
  });
</script>