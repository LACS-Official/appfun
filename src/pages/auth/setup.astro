---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="认证系统配置 - APPFUN">
  <div class="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-3xl mx-auto">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">认证系统配置</h1>
        <p class="text-lg text-gray-600">配置 Supabase 以启用用户认证功能</p>
      </div>

      <!-- 配置状态 -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">当前配置状态</h2>
        <div id="config-status" class="space-y-3">
          <div class="flex items-center space-x-3">
            <div id="url-status" class="w-3 h-3 bg-red-500 rounded-full"></div>
            <span class="text-sm">Supabase URL: <span id="url-value" class="font-mono text-gray-600">未配置</span></span>
          </div>
          <div class="flex items-center space-x-3">
            <div id="key-status" class="w-3 h-3 bg-red-500 rounded-full"></div>
            <span class="text-sm">Supabase Anon Key: <span id="key-value" class="font-mono text-gray-600">未配置</span></span>
          </div>
          <div class="flex items-center space-x-3">
            <div id="auth-status" class="w-3 h-3 bg-red-500 rounded-full"></div>
            <span class="text-sm">认证系统: <span id="auth-value" class="text-gray-600">不可用</span></span>
          </div>
        </div>
      </div>

      <!-- 配置步骤 -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-6">配置步骤</h2>
        
        <div class="space-y-6">
          <!-- 步骤 1 -->
          <div class="border-l-4 border-blue-500 pl-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">1. 创建 Supabase 项目</h3>
            <div class="text-gray-600 space-y-2">
              <p>• 访问 <a href="https://supabase.com" target="_blank" class="text-blue-600 hover:text-blue-800 underline">supabase.com</a> 并注册账号</p>
              <p>• 点击 "New Project" 创建新项目</p>
              <p>• 选择组织并填写项目信息</p>
              <p>• 等待项目创建完成（通常需要几分钟）</p>
            </div>
          </div>

          <!-- 步骤 2 -->
          <div class="border-l-4 border-blue-500 pl-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">2. 获取项目配置</h3>
            <div class="text-gray-600 space-y-2">
              <p>• 在项目仪表板中，点击左侧菜单的 "Settings" → "API"</p>
              <p>• 复制 "Project URL" 和 "anon public" API 密钥</p>
              <p>• 确保 "anon" 密钥的权限设置正确</p>
            </div>
          </div>

          <!-- 步骤 3 -->
          <div class="border-l-4 border-blue-500 pl-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">3. 配置环境变量</h3>
            <div class="text-gray-600 space-y-2">
              <p>在项目根目录的 <code class="bg-gray-100 px-2 py-1 rounded">.env</code> 文件中添加以下配置：</p>
              <div class="bg-gray-100 p-4 rounded-md font-mono text-sm mt-2">
                <div>PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co</div>
                <div>PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here</div>
              </div>
              <p class="text-sm text-amber-600">⚠️ 请将上面的值替换为您的实际 Supabase 项目配置</p>
            </div>
          </div>

          <!-- 步骤 4 -->
          <div class="border-l-4 border-blue-500 pl-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">4. 配置认证设置</h3>
            <div class="text-gray-600 space-y-2">
              <p>• 在 Supabase 仪表板中，点击 "Authentication" → "Settings"</p>
              <p>• 在 "Site URL" 中添加：<code class="bg-gray-100 px-2 py-1 rounded">http://localhost:3000</code></p>
              <p>• 在 "Redirect URLs" 中添加：<code class="bg-gray-100 px-2 py-1 rounded">http://localhost:3000/api/auth/confirm</code></p>
              <p>• 启用邮箱确认（推荐）</p>
            </div>
          </div>

          <!-- 步骤 5 -->
          <div class="border-l-4 border-green-500 pl-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">5. 重启开发服务器</h3>
            <div class="text-gray-600 space-y-2">
              <p>• 保存 <code class="bg-gray-100 px-2 py-1 rounded">.env</code> 文件后，重启开发服务器</p>
              <p>• 在终端中按 <kbd class="bg-gray-100 px-2 py-1 rounded">Ctrl+C</kbd> 停止服务器</p>
              <p>• 运行 <code class="bg-gray-100 px-2 py-1 rounded">npm run dev</code> 重新启动</p>
              <p>• 刷新此页面检查配置状态</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 测试连接 -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">测试连接</h2>
        <div class="space-y-4">
          <button id="test-connection" class="btn btn-primary">测试 Supabase 连接</button>
          <div id="test-result" class="hidden p-4 rounded-md"></div>
        </div>
      </div>

      <!-- 快速链接 -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">快速链接</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <a href="/auth/login" class="btn btn-outline text-center">登录页面</a>
          <a href="/auth/sign-up" class="btn btn-outline text-center">注册页面</a>
          <a href="/" class="btn btn-outline text-center">返回首页</a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // 检查配置状态
  function checkConfigStatus() {
    const urlStatus = document.getElementById('url-status');
    const keyStatus = document.getElementById('key-status');
    const authStatus = document.getElementById('auth-status');
    const urlValue = document.getElementById('url-value');
    const keyValue = document.getElementById('key-value');
    const authValue = document.getElementById('auth-value');

    // 检查环境变量（这些在客户端是可见的，因为是 PUBLIC_ 前缀）
    const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
    const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;

    // 检查 URL
    if (supabaseUrl && supabaseUrl !== 'your_supabase_url_here') {
      urlStatus.className = 'w-3 h-3 bg-green-500 rounded-full';
      urlValue.textContent = supabaseUrl;
    } else {
      urlStatus.className = 'w-3 h-3 bg-red-500 rounded-full';
      urlValue.textContent = '未配置';
    }

    // 检查密钥
    if (supabaseKey && supabaseKey !== 'your_supabase_anon_key_here') {
      keyStatus.className = 'w-3 h-3 bg-green-500 rounded-full';
      keyValue.textContent = supabaseKey.substring(0, 20) + '...';
    } else {
      keyStatus.className = 'w-3 h-3 bg-red-500 rounded-full';
      keyValue.textContent = '未配置';
    }

    // 检查认证系统
    if (window.authManager && window.authManager.isLoggedIn !== undefined) {
      const authState = window.authManager.getAuthState();
      if (authState.error && authState.error.includes('Supabase 未配置')) {
        authStatus.className = 'w-3 h-3 bg-red-500 rounded-full';
        authValue.textContent = '配置无效';
      } else {
        authStatus.className = 'w-3 h-3 bg-green-500 rounded-full';
        authValue.textContent = '可用';
      }
    } else {
      authStatus.className = 'w-3 h-3 bg-yellow-500 rounded-full';
      authValue.textContent = '加载中...';
    }
  }

  // 测试连接
  async function testConnection() {
    const button = document.getElementById('test-connection');
    const result = document.getElementById('test-result');
    
    button.disabled = true;
    button.textContent = '测试中...';
    result.className = 'hidden';

    try {
      if (!window.authManager) {
        throw new Error('认证管理器未加载');
      }

      const authState = window.authManager.getAuthState();
      
      if (authState.error && authState.error.includes('Supabase 未配置')) {
        throw new Error('Supabase 配置无效，请检查环境变量');
      }

      // 尝试获取用户信息（这会测试 Supabase 连接）
      const response = await fetch('/api/auth/user');
      
      if (response.ok) {
        result.className = 'p-4 rounded-md bg-green-50 border border-green-200';
        result.innerHTML = '<div class="text-green-800"><strong>✓ 连接成功！</strong><br>Supabase 配置正确，认证系统可以正常使用。</div>';
      } else {
        throw new Error(`API 响应错误: ${response.status}`);
      }
    } catch (error) {
      result.className = 'p-4 rounded-md bg-red-50 border border-red-200';
      result.innerHTML = `<div class="text-red-800"><strong>✗ 连接失败</strong><br>${error.message}</div>`;
    }

    button.disabled = false;
    button.textContent = '测试 Supabase 连接';
    result.classList.remove('hidden');
  }

  // 页面加载完成后初始化
  document.addEventListener('DOMContentLoaded', () => {
    // 延迟检查，等待认证管理器加载
    setTimeout(() => {
      checkConfigStatus();
    }, 1000);

    // 绑定测试按钮
    document.getElementById('test-connection').addEventListener('click', testConnection);

    // 定期更新状态
    setInterval(checkConfigStatus, 5000);
  });
</script>
</Layout>
