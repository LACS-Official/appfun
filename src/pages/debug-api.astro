---
import Layout from '../layouts/Layout.astro';
---

<Layout title="API 调试" description="调试API调用">
  <div class="max-w-4xl mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">API 调试</h1>
    
    <div class="space-y-6">
      <div class="bg-white rounded-lg border p-6">
        <h2 class="text-xl font-semibold mb-4">软件列表 API 测试</h2>
        <button id="test-software-list" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
          测试获取软件列表
        </button>
        <div id="software-list-result" class="mt-4 p-4 bg-gray-100 rounded"></div>
      </div>
      
      <div class="bg-white rounded-lg border p-6">
        <h2 class="text-xl font-semibold mb-4">排行榜 API 测试</h2>
        <button id="test-ranking" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600">
          测试获取排行榜
        </button>
        <div id="ranking-result" class="mt-4 p-4 bg-gray-100 rounded"></div>
      </div>

      <div class="bg-white rounded-lg border p-6">
        <h2 class="text-xl font-semibold mb-4">轮播图 API 测试</h2>
        <button id="test-banners" class="bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600">
          测试获取轮播图
        </button>
        <div id="banners-result" class="mt-4 p-4 bg-gray-100 rounded"></div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { initializeApiClient, getApiClient } from '../lib/api';
  import { apiConfig } from '../lib/config';

  // 初始化 API 客户端
  initializeApiClient(apiConfig);

  document.addEventListener('DOMContentLoaded', () => {
    console.log('Debug API page loaded');
    console.log('API Config:', apiConfig);

    // 设置全局API客户端
    window.apiClient = getApiClient();

    // 测试软件列表
    const testSoftwareListBtn = document.getElementById('test-software-list');
    const softwareListResultDiv = document.getElementById('software-list-result');
    if (testSoftwareListBtn && softwareListResultDiv) {
      testSoftwareListBtn.addEventListener('click', async () => {
        softwareListResultDiv.innerHTML = '正在加载...';

        try {
          const api = window.apiClient;
          console.log('API Client:', api);
          
          if (!api) {
            throw new Error('API客户端未初始化');
          }
          
          const response = await api.getSoftwareList({
            page: 1,
            limit: 5
          });
          
          console.log('Software List Response:', response);
          softwareListResultDiv.innerHTML = `<pre>${JSON.stringify(response, null, 2)}</pre>`;
        } catch (error: any) {
          console.error('Error:', error);
          softwareListResultDiv.innerHTML = `<div class="text-red-600">错误: ${error?.message || '未知错误'}</div>`;
        }
      });
    }

    // 测试排行榜
    const testRankingBtn = document.getElementById('test-ranking');
    const rankingResultDiv = document.getElementById('ranking-result');
    if (testRankingBtn && rankingResultDiv) {
      testRankingBtn.addEventListener('click', async () => {
        rankingResultDiv.innerHTML = '正在加载...';

        try {
          const api = window.apiClient;
          if (!api) {
            throw new Error('API客户端未初始化');
          }
          const response = await api.getSoftwareRanking({
            page: 1,
            limit: 5
          });
          
          console.log('Ranking Response:', response);
          rankingResultDiv.innerHTML = `<pre>${JSON.stringify(response, null, 2)}</pre>`;
        } catch (error: any) {
          console.error('Error:', error);
          rankingResultDiv.innerHTML = `<div class="text-red-600">错误: ${error?.message || '未知错误'}</div>`;
        }
      });
    }

    // 测试轮播图
    const testBannersBtn = document.getElementById('test-banners');
    const bannersResultDiv = document.getElementById('banners-result');
    if (testBannersBtn && bannersResultDiv) {
      testBannersBtn.addEventListener('click', async () => {
        bannersResultDiv.innerHTML = '正在加载...';

        try {
          const api = window.apiClient;
          if (!api) {
            throw new Error('API客户端未初始化');
          }
          const response = await api.getBanners(1, {
            limit: 10,
            isActive: true
          });

          console.log('Banners Response:', response);
          bannersResultDiv.innerHTML = `<pre>${JSON.stringify(response, null, 2)}</pre>`;
        } catch (error: any) {
          console.error('Error:', error);
          bannersResultDiv.innerHTML = `<div class="text-red-600">错误: ${error?.message || '未知错误'}</div>`;
        }
      });
    }
  });
</script>

<style>
  pre {
    white-space: pre-wrap;
    word-wrap: break-word;
    max-height: 400px;
    overflow-y: auto;
  }
</style>
