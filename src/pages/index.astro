---
import Layout from '../layouts/Layout.astro';
import DynamicCarousel from '../components/ui/DynamicCarousel.astro';
import PopularSoftware from '../components/software/PopularSoftware.astro';
import AllSoftwareGrid from '../components/software/AllSoftwareGrid.astro';

const title = '首页';
const description = 'APPFUN - 发现和下载最新最有趣的软件工具，包括工具软件、开发工具、设计软件、多媒体软件等多种分类，提供免费下载和详细的使用指南';
const keywords = '软件下载,免费软件,工具软件,开发工具,设计软件,多媒体软件,APPFUN,有趣软件';
const canonical = 'https://appfun.fun/';
const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "APPFUN",
  "alternateName": "APPFUN.FUN",
  "url": "https://appfun.fun",
  "description": description,
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://appfun.fun/search?q={search_term_string}",
    "query-input": "required name=search_term_string"
  },
  "publisher": {
    "@type": "Organization",
    "name": "领创工作室",
    "url": "https://appfun.fun"
  }
};
---

<Layout 
  title={title} 
  description={description} 
  keywords={keywords}
  canonical={canonical}
  structuredDataType="website"
  structuredData={structuredData}
>
  <!-- 上部分区域 (30%高度) - 三列水平排列 -->
  <section class="h-[30vh] bg-gradient-to-br from-blue-50 to-indigo-100 overflow-hidden">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-full">
      <!-- 桌面端：三列布局 -->
      <div class="hidden lg:flex lg:flex-row lg:gap-6 h-full">
        <!-- 第一列：轮播图展示区域 -->
        <div class="flex-1 flex items-center justify-center p-4">
          <div class="w-full h-full max-w-md">
            <DynamicCarousel
              websiteId={1}
              autoPlay={true}
              interval={5000}
              class="w-full h-full rounded-xl shadow-lg"
              limit={10}
            />
          </div>
        </div>

        <!-- 第二列：最热门软件 -->
        <div class="flex-1 bg-white/90 backdrop-blur-sm rounded-xl p-5 shadow-lg flex flex-col overflow-hidden">
          <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center flex-shrink-0">
            🔥 最热门软件
            <a href="/ranking" class="ml-auto text-sm text-blue-600 hover:text-blue-700 transition-colors">
              更多 →
            </a>
          </h3>
          <div id="top-popular-container" class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-300 scrollbar-track-transparent">
            <!-- 热门软件列表将在这里加载 -->
          </div>
        </div>

        <!-- 第三列：最新软件 -->
        <div class="flex-1 bg-white/90 backdrop-blur-sm rounded-xl p-5 shadow-lg flex flex-col overflow-hidden">
          <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center flex-shrink-0">
            🆕 最新软件
            <a href="/software?sortBy=updatedAt&sortOrder=desc" class="ml-auto text-sm text-blue-600 hover:text-blue-700 transition-colors">
              更多 →
            </a>
          </h3>
          <div id="top-latest-container" class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-300 scrollbar-track-transparent">
            <!-- 最新软件列表将在这里加载 -->
          </div>
        </div>
      </div>

      <!-- 移动端：垂直堆叠布局 -->
      <div class="lg:hidden flex flex-col h-full space-y-4 p-4">
        <!-- 轮播图 -->
        <div class="flex-1 flex items-center justify-center">
          <div class="w-full h-full max-w-sm">
            <DynamicCarousel
              websiteId={1}
              autoPlay={true}
              interval={5000}
              class="w-full h-full rounded-xl shadow-lg"
              limit={10}
            />
          </div>
        </div>

        <!-- 热门和最新软件 -->
        <div class="flex-1 grid grid-cols-1 sm:grid-cols-2 gap-4">
          <!-- 最热门软件 -->
          <div class="bg-white/90 backdrop-blur-sm rounded-xl p-4 shadow-lg">
            <h3 class="text-base font-semibold text-gray-900 mb-3 flex items-center">
              🔥 最热门
              <a href="/ranking" class="ml-auto text-xs text-blue-600 hover:text-blue-700 transition-colors">
                更多 →
              </a>
            </h3>
            <div id="top-popular-container-mobile" class="space-y-2 h-32 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-300 scrollbar-track-transparent">
              <!-- 热门软件列表将在这里加载 -->
            </div>
          </div>

          <!-- 最新软件 -->
          <div class="bg-white/90 backdrop-blur-sm rounded-xl p-4 shadow-lg">
            <h3 class="text-base font-semibold text-gray-900 mb-3 flex items-center">
              🆕 最新
              <a href="/software?sortBy=updatedAt&sortOrder=desc" class="ml-auto text-xs text-blue-600 hover:text-blue-700 transition-colors">
                更多 →
              </a>
            </h3>
            <div id="top-latest-container-mobile" class="space-y-2 h-32 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-300 scrollbar-track-transparent">
              <!-- 最新软件列表将在这里加载 -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>



  <!-- 中部区域 (20%高度) - 严格高度限制 -->
  <section class="max-h-[10vh] py-6 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- 左侧：大学专业软件 -->
        <a href="/stu_app" class="bg-gray-50 rounded-lg p-5 shadow-sm hover:bg-gray-100 transition-colors cursor-pointer block">
          <div class="flex items-center">
            <div class="bg-blue-100 p-3 rounded-lg mr-4">
              <span class="text-2xl">🎓</span>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900">大学专业软件</h3>
              <p class="text-sm text-gray-600">点击查看所有大学专业相关软件</p>
            </div>
          </div>
        </a>

        <!-- 右侧：原创软件 -->
        <a href="/original_app" class="bg-gray-50 rounded-lg p-5 shadow-sm hover:bg-gray-100 transition-colors cursor-pointer block">
          <div class="flex items-center">
            <div class="bg-green-100 p-3 rounded-lg mr-4">
              <span class="text-2xl">🎨</span>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900">原创软件</h3>
              <p class="text-sm text-gray-600">点击查看所有原创软件作品</p>
            </div>
          </div>
        </a>
      </div>
    </div>
  </section>

  <!-- 下部区域 (50%高度) -->
  <section class="min-h-[60vh] bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <AllSoftwareGrid limit={20} />
    </div>
  </section>


</Layout>

<script>
  import { initializeApiClient, getApiClient } from '../lib/api';
  import { apiConfig } from '../lib/config';

  // 初始化 API 客户端
  initializeApiClient(apiConfig);

  // 立即设置全局API客户端，确保在DOMContentLoaded之前就可用
  if (window) {
    window.apiClient = getApiClient();
  }

  // 页面加载完成后设置功能
  document.addEventListener('DOMContentLoaded', () => {
    // 测试 API 连接
    console.log('Testing API connection...');
    console.log('API Base URL:', apiConfig.baseUrl);
    console.log('API Key:', apiConfig.apiKey ? 'Set' : 'Not set');
    console.log('API Client ready:', !!window.apiClient);

    loadTopSoftware();
  });

  // 加载顶部区域的热门和最新软件
  async function loadTopSoftware() {
    await Promise.all([
      loadTopPopular(),
      loadTopLatest()
    ]);
  }

  // 加载热门软件（右上）
  async function loadTopPopular() {
    const container = document.getElementById('top-popular-container');
    const mobileContainer = document.getElementById('top-popular-container-mobile');
    if (!container && !mobileContainer) return;

    try {
      const api = getApiClient();
      const response = await api.getSoftwareRanking({
        page: 1,
        limit: 3,
        sortBy: 'viewCount',
        sortOrder: 'desc'
      });

      if (response.success && response.data) {
        const softwareList = response.data;

        if (Array.isArray(softwareList) && softwareList.length > 0) {
          const content = `
            <div class="space-y-3">
              ${softwareList.map((software, index) => `
                <div class="flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-50 transition-colors">
                  <div class="flex-shrink-0">
                    <div class="w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-bold ${
    index === 0 ? 'bg-yellow-500' :
      index === 1 ? 'bg-gray-400' :
        'bg-orange-500'
  }">
                      ${index + 1}
                    </div>
                  </div>
                  <div class="flex-1 min-w-0">
                    <h4 class="text-sm font-medium text-gray-900 truncate hover:text-primary-600 cursor-pointer" onclick="window.location.href='/software/${software.id}'">
                      ${software.name}
                    </h4>
                    <p class="text-xs text-gray-500 flex items-center">
                      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                      ${software.viewCount?.toLocaleString() || 0}
                    </p>
                  </div>
                </div>
              `).join('')}
            </div>
          `;

          if (container) container.innerHTML = content;
          if (mobileContainer) mobileContainer.innerHTML = content;
        } else {
          const emptyContent = '<p class="text-sm text-gray-500">暂无热门软件</p>';
          if (container) container.innerHTML = emptyContent;
          if (mobileContainer) mobileContainer.innerHTML = emptyContent;
        }
      }
    } catch (error: any) {
      console.error('加载热门软件失败:', error?.message);
      const errorContent = '<p class="text-sm text-red-500">加载失败</p>';
      if (container) container.innerHTML = errorContent;
      if (mobileContainer) mobileContainer.innerHTML = errorContent;
    }
  }

  // 加载最新软件（右下）
  async function loadTopLatest() {
    const container = document.getElementById('top-latest-container');
    const mobileContainer = document.getElementById('top-latest-container-mobile');
    if (!container && !mobileContainer) return;

    try {
      const api = getApiClient();
      const response = await api.getSoftwareList({
        page: 1,
        limit: 3,
        sortBy: 'updatedAt',
        sortOrder: 'desc'
      });

      if (response.success && response.data && response.data.software) {
        const softwareList = response.data.software;

        if (Array.isArray(softwareList) && softwareList.length > 0) {
          const content = `
            <div class="space-y-3">
              ${softwareList.map((software, index) => `
                <div class="flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-50 transition-colors">
                  <div class="flex-shrink-0">
                    <div class="w-8 h-8 rounded-full bg-green-500 flex items-center justify-center text-white text-xs font-bold">
                      NEW
                    </div>
                  </div>
                  <div class="flex-1 min-w-0">
                    <h4 class="text-sm font-medium text-gray-900 truncate hover:text-primary-600 cursor-pointer" onclick="window.location.href='/software/${software.id}'">
                      ${software.name}
                    </h4>
                    <p class="text-xs text-gray-500">
                      v${software.currentVersion} • ${formatTimeAgo(software.updatedAt)}
                    </p>
                  </div>
                </div>
              `).join('')}
            </div>
          `;

          if (container) container.innerHTML = content;
          if (mobileContainer) mobileContainer.innerHTML = content;
        } else {
          const emptyContent = '<p class="text-sm text-gray-500">暂无最新软件</p>';
          if (container) container.innerHTML = emptyContent;
          if (mobileContainer) mobileContainer.innerHTML = emptyContent;
        }
      }
    } catch (error: any) {
      console.error('加载最新软件失败:', error?.message);
      const errorContent = '<p class="text-sm text-red-500">加载失败</p>';
      if (container) container.innerHTML = errorContent;
      if (mobileContainer) mobileContainer.innerHTML = errorContent;
    }
  }

  // 格式化时间
  function formatTimeAgo(dateString: string): string {
    try {
      const date = new Date(dateString);
      const now = new Date();
      const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);

      if (diffInSeconds < 60) return '刚刚';
      if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}分钟前`;
      if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}小时前`;
      if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}天前`;

      return date.toLocaleDateString('zh-CN', {
        month: 'short',
        day: 'numeric'
      });
    } catch {
      return dateString;
    }
  }


</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .bg-primary-600 {
    background-color: var(--color-primary-600);
  }
  
  .bg-primary-700 {
    background-color: var(--color-primary-700);
  }
  
  .text-primary-100 {
    color: var(--color-primary-100);
  }
  
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  
  .bg-primary-100 {
    background-color: var(--color-primary-100);
  }
  
  .text-primary-800 {
    color: var(--color-primary-800);
  }
</style>
