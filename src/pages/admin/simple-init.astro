---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="简单数据库初始化 - APPFUN">
  <div class="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">数据库初始化</h1>
        <p class="text-gray-600">检查数据库状态并提供 SQL 脚本</p>
      </div>
      
      <!-- 当前状态 -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">当前系统状态</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          <div class="text-center p-4 bg-blue-50 rounded-lg">
            <div class="text-2xl font-bold text-blue-600" id="db-status">检查中</div>
            <div class="text-sm text-gray-600">数据库连接</div>
          </div>
          
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <div class="text-2xl font-bold text-green-600" id="table-status">检查中</div>
            <div class="text-sm text-gray-600">数据表状态</div>
          </div>
          
          <div class="text-center p-4 bg-purple-50 rounded-lg">
            <div class="text-2xl font-bold text-purple-600" id="api-status">检查中</div>
            <div class="text-sm text-gray-600">API 功能</div>
          </div>
        </div>
        
        <div class="text-center">
          <button
            id="check-status-btn"
            class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            检查系统状态
          </button>
        </div>
      </div>
      
      <!-- 初始化操作 -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">数据库初始化</h2>
        
        <div class="space-y-4">
          <div>
            <label for="admin-key" class="block text-sm font-medium text-gray-700 mb-2">
              管理员密钥
            </label>
            <input
              type="password"
              id="admin-key"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="请输入管理员密钥"
              value="admin-init-2024"
            />
          </div>
          
          <button
            id="init-btn"
            class="w-full px-6 py-3 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            检查并初始化数据库
          </button>
        </div>
      </div>
      
      <!-- 结果显示 -->
      <div id="results-section" class="hidden bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">操作结果</h2>
        <div id="results-content"></div>
      </div>
      
      <!-- SQL 脚本 -->
      <div id="sql-section" class="hidden bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">SQL 初始化脚本</h2>
        <p class="text-sm text-gray-600 mb-4">
          如果自动初始化失败，请复制以下 SQL 脚本到 Supabase SQL 编辑器中执行：
        </p>
        
        <div class="relative">
          <pre id="sql-script" class="bg-gray-900 text-green-400 p-4 rounded-lg overflow-x-auto text-sm font-mono max-h-96"></pre>
          <button
            id="copy-sql-btn"
            class="absolute top-2 right-2 px-3 py-1 bg-gray-700 text-white text-xs rounded hover:bg-gray-600"
          >
            复制
          </button>
        </div>
        
        <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h3 class="font-medium text-blue-900 mb-2">执行步骤：</h3>
          <ol class="text-sm text-blue-800 space-y-1">
            <li>1. 登录 Supabase 控制台</li>
            <li>2. 进入 SQL 编辑器</li>
            <li>3. 粘贴上面的 SQL 脚本</li>
            <li>4. 点击运行</li>
            <li>5. 刷新页面检查状态</li>
          </ol>
        </div>
      </div>
      
      <!-- 测试功能 -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">测试功能</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <a
            href="/test-invitation"
            class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-center"
          >
            <div class="text-2xl mb-2">🎫</div>
            <h3 class="font-medium text-gray-900 mb-1">邀请码测试</h3>
            <p class="text-sm text-gray-600">测试邀请码功能</p>
          </a>
          
          <a
            href="/auth/sign-up"
            class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-center"
          >
            <div class="text-2xl mb-2">👤</div>
            <h3 class="font-medium text-gray-900 mb-1">用户注册</h3>
            <p class="text-sm text-gray-600">测试注册功能</p>
          </a>
          
          <a
            href="/admin/invitations"
            class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-center"
          >
            <div class="text-2xl mb-2">📋</div>
            <h3 class="font-medium text-gray-900 mb-1">邀请码管理</h3>
            <p class="text-sm text-gray-600">查看邀请码列表</p>
          </a>
          
          <a
            href="/about"
            class="block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-center"
          >
            <div class="text-2xl mb-2">📊</div>
            <h3 class="font-medium text-gray-900 mb-1">统计数据</h3>
            <p class="text-sm text-gray-600">查看访问统计</p>
          </a>
        </div>
      </div>
      
      <!-- 返回链接 -->
      <div class="mt-8 text-center">
        <a href="/" class="inline-flex items-center text-sm text-blue-600 hover:text-blue-800">
          ← 返回首页
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const checkStatusBtn = document.getElementById('check-status-btn');
    const initBtn = document.getElementById('init-btn');
    const adminKeyInput = document.getElementById('admin-key');
    const resultsSection = document.getElementById('results-section');
    const resultsContent = document.getElementById('results-content');
    const sqlSection = document.getElementById('sql-section');
    const sqlScript = document.getElementById('sql-script');
    const copySqlBtn = document.getElementById('copy-sql-btn');
    
    // 检查系统状态
    checkStatusBtn.addEventListener('click', checkSystemStatus);
    
    // 初始化数据库
    initBtn.addEventListener('click', async () => {
      const adminKey = adminKeyInput.value.trim();
      
      if (!adminKey) {
        alert('请输入管理员密钥');
        return;
      }
      
      initBtn.disabled = true;
      initBtn.textContent = '检查中...';
      
      try {
        const response = await fetch('/api/admin/simple-init', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ adminKey: adminKey }),
        });
        
        const data = await response.json();
        
        // 显示结果
        resultsSection.classList.remove('hidden');
        resultsContent.innerHTML = '';
        
        // 显示消息
        const messageDiv = document.createElement('div');
        messageDiv.className = `p-4 rounded-md mb-4 ${data.success ? 'bg-green-50 border border-green-200' : 'bg-yellow-50 border border-yellow-200'}`;
        messageDiv.innerHTML = `
          <div class="flex items-center">
            <span class="${data.success ? 'text-green-800' : 'text-yellow-800'} font-medium">${data.message}</span>
          </div>
        `;
        resultsContent.appendChild(messageDiv);
        
        // 显示详细结果
        if (data.results && data.results.length > 0) {
          const detailsDiv = document.createElement('div');
          detailsDiv.className = 'space-y-2';
          
          data.results.forEach(result => {
            const resultDiv = document.createElement('div');
            resultDiv.className = `flex items-center justify-between p-3 rounded-md ${
              result.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'
            }`;
            
            resultDiv.innerHTML = `
              <div>
                <span class="${result.success ? 'text-green-800' : 'text-red-800'}">${result.step}</span>
                ${result.message ? `<div class="text-xs text-gray-600 mt-1">${result.message}</div>` : ''}
                ${result.error ? `<div class="text-xs text-red-600 mt-1">${result.error}</div>` : ''}
              </div>
              <span class="${result.success ? 'text-green-600' : 'text-red-600'}">
                ${result.success ? '✓' : '✗'}
              </span>
            `;
            
            detailsDiv.appendChild(resultDiv);
          });
          
          resultsContent.appendChild(detailsDiv);
        }
        
        // 显示 SQL 脚本
        if (data.sqlScript) {
          sqlSection.classList.remove('hidden');
          sqlScript.textContent = data.sqlScript;
        }
        
      } catch (error) {
        console.error('初始化错误:', error);
        resultsSection.classList.remove('hidden');
        resultsContent.innerHTML = `
          <div class="p-4 bg-red-50 border border-red-200 rounded-md">
            <span class="text-red-800 font-medium">网络错误，请重试</span>
          </div>
        `;
      } finally {
        initBtn.disabled = false;
        initBtn.textContent = '检查并初始化数据库';
      }
    });
    
    // 复制 SQL 脚本
    copySqlBtn.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(sqlScript.textContent);
        copySqlBtn.textContent = '已复制';
        setTimeout(() => {
          copySqlBtn.textContent = '复制';
        }, 2000);
      } catch (error) {
        console.error('复制失败:', error);
        alert('复制失败，请手动选择文本复制');
      }
    });
    
    // 初始检查状态
    checkSystemStatus();
  });
  
  async function checkSystemStatus() {
    const dbStatus = document.getElementById('db-status');
    const tableStatus = document.getElementById('table-status');
    const apiStatus = document.getElementById('api-status');
    
    // 重置状态
    dbStatus.textContent = '检查中';
    tableStatus.textContent = '检查中';
    apiStatus.textContent = '检查中';
    
    try {
      // 检查数据库连接
      const dbResponse = await fetch('/api/admin/check-database');
      const dbData = await dbResponse.json();
      
      dbStatus.textContent = dbResponse.ok ? '正常' : '异常';
      dbStatus.className = `text-2xl font-bold ${dbResponse.ok ? 'text-green-600' : 'text-red-600'}`;
      
      // 检查表状态
      const tableCount = dbData.results ? dbData.results.filter(r => r.success).length : 0;
      tableStatus.textContent = `${tableCount}/5`;
      tableStatus.className = `text-2xl font-bold ${tableCount >= 3 ? 'text-green-600' : 'text-yellow-600'}`;
      
      // 检查 API 功能
      const apiResponse = await fetch('/api/auth/validate-invitation', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ code: 'TEST0001' })
      });
      
      apiStatus.textContent = apiResponse.ok ? '正常' : '异常';
      apiStatus.className = `text-2xl font-bold ${apiResponse.ok ? 'text-green-600' : 'text-red-600'}`;
      
    } catch (error) {
      console.error('状态检查失败:', error);
      dbStatus.textContent = '错误';
      tableStatus.textContent = '错误';
      apiStatus.textContent = '错误';
    }
  }
</script>
</Layout>
