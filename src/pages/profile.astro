---
/**
 * 用户个人中心页面
 */
import Layout from '../layouts/Layout.astro';
---

<Layout title="个人中心">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <!-- 页面标题 -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">个人中心</h1>
        <p class="text-gray-600 dark:text-gray-400 mt-2">管理您的账户信息和设置</p>
      </div>

      <!-- 用户信息卡片 -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-6">
        <div class="flex items-center space-x-4 mb-6">
          <div class="w-20 h-20 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center overflow-hidden">
            <img data-user-avatar class="w-full h-full object-cover" alt="用户头像" />
          </div>
          <div>
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white" data-user-name>加载中...</h2>
            <p class="text-gray-600 dark:text-gray-400" data-user-email>加载中...</p>
            <p class="text-sm text-gray-500 dark:text-gray-500" data-user-id>加载中...</p>
          </div>
        </div>

        <!-- 用户详细信息 -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">用户名</label>
            <div class="p-3 bg-gray-50 dark:bg-gray-700 rounded-md text-gray-900 dark:text-white" data-user-info="username">
              加载中...
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">全名</label>
            <div class="p-3 bg-gray-50 dark:bg-gray-700 rounded-md text-gray-900 dark:text-white" data-user-info="full_name">
              加载中...
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">邮箱确认时间</label>
            <div class="p-3 bg-gray-50 dark:bg-gray-700 rounded-md text-gray-900 dark:text-white" data-user-info="email_confirmed_at">
              加载中...
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">注册时间</label>
            <div class="p-3 bg-gray-50 dark:bg-gray-700 rounded-md text-gray-900 dark:text-white" data-user-info="created_at">
              加载中...
            </div>
          </div>
        </div>
      </div>

      <!-- 账户操作 -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-6">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">账户操作</h3>
        <div class="space-y-3">
          <button 
            class="w-full md:w-auto px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
            onclick="refreshUserInfo()"
          >
            刷新用户信息
          </button>
          <button 
            class="w-full md:w-auto px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors ml-0 md:ml-3"
            data-logout-button
          >
            退出登录
          </button>
        </div>
      </div>

      <!-- 登录状态信息 -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">会话信息</h3>
        <div class="space-y-2 text-sm">
          <div class="flex justify-between">
            <span class="text-gray-600 dark:text-gray-400">登录状态:</span>
            <span class="font-medium" id="login-status">检查中...</span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600 dark:text-gray-400">会话有效性:</span>
            <span class="font-medium" id="session-validity">检查中...</span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600 dark:text-gray-400">最后刷新:</span>
            <span class="font-medium" id="last-refresh">-</span>
          </div>
        </div>
      </div>

      <!-- 未登录状态 -->
      <div data-require-logout class="text-center py-12">
        <div class="max-w-md mx-auto">
          <div class="w-16 h-16 mx-auto mb-4 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
          </div>
          <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">请先登录</h2>
          <p class="text-gray-600 dark:text-gray-400 mb-4">您需要登录后才能查看个人中心</p>
          <a 
            href="/auth/sign-in" 
            class="inline-block px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
          >
            立即登录
          </a>
        </div>
      </div>
    </div>
  </main>

  <!-- 包含认证状态管理器 -->
  <script>
    // 刷新用户信息
    function refreshUserInfo() {
      if (window.authUtils && window.authUtils.getCurrentUser) {
        const user = window.authUtils.getCurrentUser();
        if (user) {
          updateUserDisplay(true, user);
          updateSessionInfo();
          
          // 显示成功消息
          showMessage('用户信息已刷新', 'success');
        } else {
          showMessage('获取用户信息失败', 'error');
        }
      }
    }

    // 更新会话信息
    function updateSessionInfo() {
      const loginStatus = document.getElementById('login-status');
      const sessionValidity = document.getElementById('session-validity');
      const lastRefresh = document.getElementById('last-refresh');

      if (window.authUtils) {
        const isLoggedIn = window.authUtils.isLoggedIn();
        const user = window.authUtils.getCurrentUser();
        
        if (loginStatus) {
          loginStatus.textContent = isLoggedIn ? '已登录' : '未登录';
          loginStatus.className = `font-medium ${isLoggedIn ? 'text-green-600' : 'text-red-600'}`;
        }
        
        if (sessionValidity) {
          const isValid = user && (!user.expiresAt || Date.now() < user.expiresAt);
          sessionValidity.textContent = isValid ? '有效' : '已过期';
          sessionValidity.className = `font-medium ${isValid ? 'text-green-600' : 'text-red-600'}`;
        }
        
        if (lastRefresh) {
          lastRefresh.textContent = new Date().toLocaleString();
        }
      }
    }

    // 显示消息
    function showMessage(message, type = 'info') {
      const messageEl = document.createElement('div');
      messageEl.className = `fixed top-4 right-4 px-4 py-2 rounded-md text-white z-50 ${
        type === 'success' ? 'bg-green-600' : 
        type === 'error' ? 'bg-red-600' : 'bg-blue-600'
      }`;
      messageEl.textContent = message;
      
      document.body.appendChild(messageEl);
      
      setTimeout(() => {
        messageEl.remove();
      }, 3000);
    }

    // 更新用户显示信息
    function updateUserDisplay(isLoggedIn, user) {
      if (isLoggedIn && user) {
        // 更新用户信息
        const userNameEl = document.querySelector('[data-user-name]');
        const userEmailEl = document.querySelector('[data-user-email]');
        const userIdEl = document.querySelector('[data-user-id]');
        const userAvatarEl = document.querySelector('[data-user-avatar]');

        if (userNameEl) {
          userNameEl.textContent = window.authUtils?.getUserDisplayName(user) || user.full_name || user.username || '未知用户';
        }
        if (userEmailEl) {
          userEmailEl.textContent = user.email || '未设置';
        }
        if (userIdEl) {
          userIdEl.textContent = `#${user.id}`;
        }
        if (userAvatarEl) {
          const avatarUrl = user.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.email || 'User')}&background=random`;
          userAvatarEl.src = avatarUrl;
        }

        // 更新详细信息
        const userInfoElements = document.querySelectorAll('[data-user-info]');
        userInfoElements.forEach(el => {
          const infoType = el.getAttribute('data-user-info');
          if (user[infoType]) {
            if (infoType.includes('_at')) {
              // 格式化日期
              el.textContent = new Date(user[infoType]).toLocaleString();
            } else {
              el.textContent = user[infoType];
            }
          } else {
            el.textContent = '未设置';
          }
        });
      }
    }

    // 页面加载完成后初始化
    document.addEventListener('DOMContentLoaded', () => {
      // 等待认证系统初始化
      const checkAuth = () => {
        if (window.authUtils) {
          const user = window.authUtils.getCurrentUser();
          const isLoggedIn = window.authUtils.isLoggedIn();
          
          updateUserDisplay(isLoggedIn, user);
          updateSessionInfo();
          
          // 监听认证状态变化
          window.authUtils.onAuthStateChange((isLoggedIn, user) => {
            updateUserDisplay(isLoggedIn, user);
            updateSessionInfo();
          });
        } else {
          // 如果认证系统还未初始化，继续等待
          setTimeout(checkAuth, 100);
        }
      };
      
      setTimeout(checkAuth, 200);
    });

    // 监听认证状态变化事件
    window.addEventListener('authStateChanged', (event) => {
      const { isLoggedIn, user } = event.detail;
      updateUserDisplay(isLoggedIn, user);
      updateSessionInfo();
    });
  </script>
</Layout>
